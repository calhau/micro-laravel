version: '3'

services: 

    app:
        build: .
        container_name: app
        #entrypoint: dockerize -template ./.docker/app/.env:.env -wait tcp://db:3306 -timeout 120s ./.docker/entrypoint.sh
        #essas variaveis v√£o substituir no comando dockerize -template acima
        # environment: 
        #     - DB_HOST=db
        #     - DB_DATABASE=laravel
        #     - DB_USERNAME=root
        #     - DB_PASSWORD=root
        volumes: 
            - .:/var/www
        networks: 
            - app-networks
        depends_on: 
            - db
            - redis

    nginx:
        build: .docker/nginx
        container_name: nginx
        restart: always
        #entrypoint: dockerize -template ./nginx.tmpl:./nginx.conf nginx -g 'daemon off;'
        #Ao inves de utilizar o entryPoint, utilizei direto no CMD - DockerFile
        environment: 
            - HOST=app
            - PORT=9000
        #Entrar de forma interativa
        tty: true
        ports: 
            - "8080:80"
        volumes: 
            - .:/var/www
        networks: 
            - app-networks
        depends_on: 
            - app
 

    db:
        image: mysql:5.7
        command: --innodb-use-native-aio=0
        container_name: db
        restart: always
        tty: true
        ports: 
            - "3306:3306"
        volumes: 
            - ./.docker/dbdata:/var/lib/mysql
        environment: 
            - MYSQL_DATABASE=laravel
            - MYSQL_USER=root
            - MYSQL_ROOT_PASSWORD=root
        networks: 
            - app-networks


    redis:
        image: redis:alpine
        container_name: redis
        expose: 
            - 6379
        networks: 
            - app-networks

networks: 
    app-networks:
        driver: bridge